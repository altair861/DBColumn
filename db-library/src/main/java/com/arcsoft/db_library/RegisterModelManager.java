package com.arcsoft.db_library;

import android.content.Context;
import android.content.pm.PackageManager;
import android.util.Log;

import com.arcsoft.db_annotation.DBConstant;
import com.arcsoft.db_library.utils.ClassUtils;
import com.arcsoft.db_library.utils.PackageUtils;

import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

/**
 * author : cy
 * date   : 2019-10-31 15:27
 * desc   :
 */
public class RegisterModelManager {
    private final static String TAG = "RegisterModelManager";

    public static Set<String> getRegisterModelPaths(Context context) {
        Set<String> routerMap = null;
        if (DBHelper.debuggable() || PackageUtils.isNewVersion(context)) {
            Log.i(TAG, "Run with debug mode or new install, rebuild router map.");
            // These class was generated by arouter-compiler.
            try {
                routerMap = ClassUtils.getFileNameByPackageName(context, DBConstant.MODEL_REGISTER_PKG_CONSTANT);
            } catch (PackageManager.NameNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            if (!routerMap.isEmpty()) {
                context.getSharedPreferences(DBConstant.DBCOLUMN_SP_CACHE_KEY, Context.MODE_PRIVATE).edit().putStringSet(DBConstant.DBCOLUMN_SP_KEY_MAP, routerMap).apply();
                PackageUtils.updateVersion(context);    // Save new version name when router map update finishes.
            }


        } else {
            Log.i(TAG, "Load router map from cache.");
            routerMap = new HashSet<>(context.getSharedPreferences(DBConstant.DBCOLUMN_SP_CACHE_KEY, Context.MODE_PRIVATE).getStringSet(DBConstant.DBCOLUMN_SP_KEY_MAP, new HashSet<String>()));
        }
        return routerMap;
    }
}
